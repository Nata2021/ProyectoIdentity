@model ProyectoIdentity.Models.ViewModels.CasoCreateViewModel // Reutilizamos el ViewModel de creación

@{
    ViewData["Title"] = "Editar Caso";
    int casoId = (int)ViewData["CasoId"]; // Recuperamos el ID del caso del ViewData
}

<h1>Editar Caso</h1>

<h4>Caso</h4>
<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="Edit" asp-route-id="@casoId"> @* Asegúrate de pasar el ID *@
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Titulo" /> @* Campo oculto para Title si no quieres que se edite *@

            <input type="hidden" name="id" value="@casoId" /> @* Pasamos el ID del caso para el POST *@
            
            <div class="form-group mb-3">
                <label asp-for="Titulo" class="control-label"></label>
                <input asp-for="Titulo" class="form-control" />
                <span asp-validation-for="Titulo" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Descripcion" class="control-label"></label>
                <textarea asp-for="Descripcion" class="form-control" rows="3"></textarea>
                <span asp-validation-for="Descripcion" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="FechaInicio" class="control-label"></label>
                <input asp-for="FechaInicio" class="form-control" type="date" />
                <span asp-validation-for="FechaInicio" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Estado" class="control-label"></label>
                <select asp-for="Estado" asp-items="Html.GetEnumSelectList<ProyectoIdentity.Models.Domain.Enums.EstadoCaso>()" class="form-control"></select>
                <span asp-validation-for="Estado" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="ClienteId" class="control-label"></label>
                <select asp-for="ClienteId" asp-items="@Model.ClientesList" class="form-control"></select>
                <span asp-validation-for="ClienteId" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="AbogadoId" class="control-label"></label>
                <select asp-for="AbogadoId" asp-items="@Model.AbogadosList" class="form-control"></select>
                <span asp-validation-for="AbogadoId" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="TipoCaso" class="control-label"></label>
                <select asp-for="TipoCaso" asp-items="Html.GetEnumSelectList<ProyectoIdentity.Models.Domain.Enums.TipoCaso>()" class="form-control"></select>
                <span asp-validation-for="TipoCaso" class="text-danger"></span>
            </div>
            <div class="form-group mb-3">
                <label asp-for="Prioridad" class="control-label"></label>
                <select asp-for="Prioridad" asp-items="Html.GetEnumSelectList<ProyectoIdentity.Models.Domain.Enums.Prioridad>()" class="form-control"></select>
                <span asp-validation-for="Prioridad" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <input type="submit" value="Guardar" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Cancelar</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            flatpickr("#FechaInicio", {
                dateFormat: "Y-m-d",
                allowInput: true,
                altInput: true,
                altFormat: "F j, Y",
                // Puedes añadir minDate, maxDate si es necesario
            });
        });
    </script>
}